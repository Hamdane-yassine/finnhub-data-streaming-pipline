version: '3'

services:
  zookeeper:
    image: bitnami/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    user: root
    volumes:
      - ./kafka/data/zookeeper:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    build:
      context: ./
      dockerfile: ./kafka/Dockerfile
    hostname: kafka-broker
    container_name: kafka-broker
    ports:
      - 9094:${KAFKA_PORT}
    # volumes:
    #   - ./kafka/data/kafka:/bitnami/kafka
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:${KAFKA_PORT}
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://${KAFKA_SERVER}:${KAFKA_PORT}
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD-SHELL", "/setup.sh"]
      timeout: 5s
      interval: 1s
      retries: 5
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      - KAFKA_BROKERCONNECT=${KAFKA_SERVER}:9092,${KAFKA_SERVER}:9092
      - JVM_OPTS=-Xms32M -Xmx64M
      - SERVER_SERVLET_CONTEXTPATH=/
    depends_on:
      kafka:
        condition: service_healthy

  cassandra:
    build:
      dockerfile: Dockerfile
      context: ./cassandra
    hostname: cassandra
    container_name: cassandra
    # volumes:
    #   - ./cassandra/data:/var/lib/cassandra
    ports:
      - 9042:${CASSANDRA_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "/setup.sh" ]
      interval: 0s
      timeout: 20s
      retries: 20

  # Spark cluster
  spark-master:
    build: 
      context: ./
      dockerfile: streaming/Dockerfile
    hostname: spark-master
    container_name: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
      - "4040:4040"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_URL=${SPARK_MASTER}
      - SPARK_USER=root
      - SPARK_DAEMON_USER=root
    volumes:
      - ./streaming/data/ivy2:/root/.ivy2
    healthcheck:
      test: ["CMD-SHELL", "/setup.sh"]
      interval: 0s
      timeout: 10s
      retries: 10
    depends_on:
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_healthy

  spark-worker-a:
    build: 
      context: ./
      dockerfile: streaming/Dockerfile
    container_name: spark-worker-a
    hostname: spark-worker-a
    ports:
      - "9091:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=${SPARK_MASTER}
      - SPARK_USER=root
      - SPARK_DAEMON_USER=root
      - SPARK_WORKER_MEMORY=1g
      - SPARK_WORKER_CORES=2
    depends_on:
      spark-master:
        condition: service_started

  # spark-worker-b:
  #   build: 
  #     context: ./
  #     dockerfile: streaming/Dockerfile
  #   container_name: spark-worker-b
  #   hostname: spark-worker-b
  #   ports:
  #     - "9092:8081"
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=${SPARK_MASTER}
  #     - SPARK_USER=root
  #     - SPARK_DAEMON_USER=root
  #     - SPARK_WORKER_MEMORY=1g
  #     - SPARK_WORKER_CORES=2
  #   depends_on:
  #     spark-master:
  #       condition: service_started
  
  ingestion:
    build:
      context: ./
      dockerfile: finnhub/Dockerfile
    container_name: ingestion
    depends_on:
      kafka:
        condition: service_healthy
      spark-master:
        condition: service_healthy
      spark-worker-a:
        condition: service_started
      # spark-worker-b:
      #   condition: service_started
      cassandra:
        condition: service_healthy
  
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - ./grafana/data/:/var/lib/grafana
    user: "root"
    ports:
      - 3000:${GRAFANA_PORT}
    depends_on:
      - ingestion